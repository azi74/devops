kubectl config current-context              Get the current context
kubectl config get-contexts                 List all context
kubectl config use-context [contextName]    Set the current context
kubectl config delete-context[contextName]  Delete a context from the config file

kubectx [contextName]                       Switch context

# Create a new manifests - kubectl
kubectl create deploy mynginx --image=nginx --port=80 --replicas=3 --dry-run=client -o yaml

# Namespaces
kubectl get ns                                                      Get all namespaces
kubectl config set-context --current --namespace=[namespaceName]    Set the current context to use a namespace
kubectl create ns [namespaceName]                                   Create a Namespace
kubectl delete ns [namespaceName]                                   Delete a Namespace
kubectl get pods --all-namespaces                                   List all pods in all namespaces

#Pods
kubectl create -f [pod-definition.yml]					            Creates a pod
kubectl exec -it [podName] --container [containerName] -- /bin/sh	Exec into a pod
kubectl logs [podName] -c [containerName]				            Get the logs for a Container
kubectl delete -f [podName.yaml] --force --grace-period=0		    Cleanup 

#ReplicaSets
kubectl apply -f [definition.yml]                                   Creates a ReplicaSet
kubectl get rs                                                      List ReplicaSets
kubectl describe rs [rsName]                                        Get info
kubectl delete -f [definition.yaml]                                 Delete a ReplicaSet
kubectl delete rs [rsName]                                          Same but using the ReplicaSet name

#Deployment
kubectl create deploy [deploymentName] --image=busybox --replicas=3 --port=80       Imperative Way
kubectl apply -f [definition.yaml]      q                                           Create a Deployment
kubectl get deploy                                                                  List Deployments
kubectl describe deploy [deploymentName]                                            Get info
kubectl delete -f [definition.yaml]                                                 Delete a Deployment
kubectl delete deploy [deploymentName]                                              Same but using the Deployment name	

#DaemonSets
kubectl apply -f [definition.yaml]                                            Create a DaemonSet
kubectl get ds                                                                List DaemonSets
kubectl describe ds [rsName]                                                  Get info
kubectl delete -f [definition.yaml]                                           Delete a DaemonSet
kubectl delete ds [rsName]                                                    Same but using the DaemonSet name
          